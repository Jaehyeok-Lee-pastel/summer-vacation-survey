"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-h_=tww6=4%8)djzl=w!ju)&tm7ntv)ih6zoukkl=16a)&!egjy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'dt5857.pythonanywhere.com',  # 여기가 중요!
    'localhost',
    '127.0.0.1',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Third party apps
    'corsheaders',  # CORS 처리를 위해
    
    # Local apps
    'surveys',  # 우리가 만든 설문조사 앱
    'accounts',  # 
    'data_analysis',  # 
    
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # 이 줄을 맨 위에 추가
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'summer_vacation_db',       # MySQL DB 이름
        'USER': 'root',       # MySQL 사용자
        'PASSWORD': '1234', # MySQL 비밀번호
        'HOST': 'localhost',          # MySQL 서버 주소
        'PORT': '3306',               # MySQL 포트
        'OPTIONS': {
            'charset': 'utf8mb4',     # 한글 처리
        },
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'dt5857$default',       # MySQL DB 이름
#         'USER': 'dt5857',       # MySQL 사용자
#         'PASSWORD': 'xordyd@8090', # MySQL 비밀번호
#         'HOST': 'dt5857.mysql.pythonanywhere-services.com',          # MySQL 서버 주소
#         'PORT': '3306',               # MySQL 포트
#         'OPTIONS': {
#             'charset': 'utf8mb4',     # 한글 처리
#         },
#     }
# }




# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS 설정 (프론트엔드-백엔드 분리를 위해)
CORS_ALLOW_ALL_ORIGINS = True  # 개발환경에서만 사용
CORS_ALLOW_CREDENTIALS = True

# CORS 설정 추가 (파일 끝에)
CORS_ALLOWED_ORIGINS = [
    "https://your-frontend-name.netlify.app",  # 나중에 프론트엔드 URL로 변경
    "http://localhost:8080",
    "http://127.0.0.1:8080",
    "http://localhost:3000",
]

ML_MODEL_DIR = os.path.join(BASE_DIR, 'data_analysis', 'ml_models')
SURVEY_CSV_PATH = os.path.join(BASE_DIR, 'data', 'survey_data.csv')
os.makedirs(ML_MODEL_DIR, exist_ok=True)
os.makedirs(os.path.join(BASE_DIR, 'data'), exist_ok=True)

print(f"ML 모델 디렉토리: {ML_MODEL_DIR}")
print(f"CSV 데이터 경로: {SURVEY_CSV_PATH}")